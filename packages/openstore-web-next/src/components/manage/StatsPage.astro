---
import ManageHeader from "@/components/manage/ManageHeader.astro";
import { AppManageSchema, type AppManageData } from "@/lib/schema";
import ManageError from "./ManageError.astro";

export const prerender = false;

export type Props = {
  id: string;
};

const { id } = Astro.props;
const apikey = Astro.cookies.get("apikey")!.value;
const appResponse = await fetch(`${import.meta.env.PUBLIC_API_URL}api/v3/manage/${id}?apikey=${apikey}`);

let app: AppManageData | undefined = undefined;
let revisions: AppManageData['revisions'] = [];
if (appResponse.status === 200) {
  app = await appResponse.json().then(({ data }) => AppManageSchema.parse(data));
  revisions = app!.revisions.toSorted((a, b) => {
    return b.revision - a.revision;
  });
}
---

{app ? (
  <ManageHeader app={app} breadcrumb="Stats" />

  <section class="section space-y-2 grow mb-8">
    <h2 class="text-2xl">Download Stats</h2>

    <table class="w-full md:w-1/2">
      <thead>
        <tr>
          <th class="text-left">Revision</th>
          <th>Channel</th>
          <th>Arch</th>
          <th>Version</th>
          <th class="text-right">Downloads</th>
        </tr>
      </thead>
      <tbody>
        <tr class="border-b-1 border-b-gray-300 font-extrabold">
          <td colspan="4" class="p-1"> Total </td>
          <td class="text-right p-1">{app.totalDownloads.toLocaleString()}</td>
        </tr>

        {
          revisions.map((revision) => {
            const isCurrent = app.downloads.some((download) => download.revision === revision.revision);
            return (
              <tr class={`border-b-1 border-b-gray-300 text-center ${isCurrent ? "font-extrabold" : ""}`}>
                <td class="text-left p-1">
                  {revision.revision} {isCurrent ? "*" : ""}
                </td>
                <td>{revision.channel}</td>
                <td>{revision.architecture}</td>
                <td>{revision.version}</td>
                <td class="text-right p-1">{revision.downloads.toLocaleString()}</td>
              </tr>
            );
          })
        }
      </tbody>
    </table>
  </section>
) : (
  <ManageError status={appResponse.status} />
)}

