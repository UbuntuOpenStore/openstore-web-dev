---
import SvgSearch from "@/components/icons/Search";
import StaticPagination from "@/components/manage/StaticPagination";
import { AppSearchSchema } from "@/lib/schema";
import ManageError from "./ManageError.astro";

export type Props = {
  term: string;
  currentPage: number;
};

const { term, currentPage } = Astro.props;
const apikey = Astro.cookies.get("apikey")!.value;

const PAGE_SIZE = 32;
const skip = currentPage * PAGE_SIZE;
const appSearchUrl = new URL(`${import.meta.env.PUBLIC_API_URL}api/v3/manage`);
appSearchUrl.searchParams.append("apikey", apikey);
appSearchUrl.searchParams.append("limit", PAGE_SIZE.toString());
appSearchUrl.searchParams.append("skip", skip.toString());
appSearchUrl.searchParams.append("search", term);

const appResponse = await fetch(appSearchUrl);
const apps = appResponse.status === 200 ? await appResponse.json().then(({ data }) => AppSearchSchema.parse(data)) : undefined;
const totalPages = Math.ceil((apps?.count ?? 0) / PAGE_SIZE) - 1;
---

{
  apps === undefined ? (
    <ManageError status={appResponse.status} />
  ) : (
    <>
      <div class="flex justify-between gap-4">
        <form action="" method="GET">
          <div class="relative max-w-sm">
            <input
              type="text"
              placeholder="Search..."
              aria-label="Search"
              class="w-full h-full py-2 px-4 pr-10 rounded-full border border-gray-300 focus:outline-hidden focus:ring-2 focus:ring-blue-500 focus:border-transparent text-black"
              value={term}
              name="search"
              id="search"
            />

            <button type="submit" class="absolute right-3 top-1/2 transform -translate-y-1/2">
              <SvgSearch class="h-5 w-5 text-gray-500 cursor-pointer" />
            </button>
          </div>

          {/* Reset the page when the user searches */}
          <input type="hidden" name="page" id="page" value="0" />
        </form>

        <a href="/submit/" class="btn bg-ubuntu-orange text-white">
          Submit
        </a>
      </div>

      {apps.count > 0 ? (
        <div class="grid grid-cols-2 md:grid-cols-4">
          {apps.packages.map((app) => (
            <a href={`/manage/${app.id}/`} class="flex flex-row gap-4 max-w-xl mb-4 py-2 px-1 md:p-4">
              <img
                class="rounded-2xl max-w-[64px] max-h-[64px]"
                src={app.icon}
                alt=""
                width="64"
                height="64"
                loading="lazy"
                style={`view-transition-name: app-${app.id.replace(/\./g, "-")}`}
              />
              <div>
                <div class="text-md md:text-lg text-ellipsis line-clamp-2 font-bold break-all">{app.name}</div>

                <p>{app.publisher}</p>
                <p class={app.published ? "text-ubuntu-purple" : "text-gray-400"}>{app.published ? "Published" : "Not Published"}</p>
              </div>
            </a>
          ))}
        </div>
      ) : (
        <div class="h-full text-2xl">No apps found</div>
      )}

      {totalPages > 1 && <StaticPagination currentPage={currentPage} totalPages={totalPages} baseUrl={`/manage/?search=${term}`} />}
    </>
  )
}
