#!/usr/bin/env node

'use strict';

const db = require('../db');
const helpers = require('../utils/helpers');
const upload = require('../utils/upload');
const clickParse = require('../utils/click-parser-async');
const config = require('../utils/config');
const logger = require('../utils/logger');

db.Package.find().then(async (pkgs) => {
    for (let i = 0; i < pkgs.length; i++) {
        let pkg = pkgs[i];

        if (pkg.package.indexOf(config.backblaze.bucketName) >= 0) {
            logger.debug(`Skipping ${pkg.id} (already processed)`);
        }
        else {
            logger.debug(`Uploading ${pkg.id}`);
            let filePath = `/tmp/${pkg.id}`;
            await helpers.download(pkg.package, filePath);

            let parseData = {};
            try {
                parseData = await clickParse(filePath, true);
            }
            catch (err) {
                logger.error(`Skipping ${pkg.id} due to error:`, err);
                continue;
            }

            let packageUrl;
            let iconUrl;
            [packageUrl, iconUrl] = await upload.uploadPackage(
                pkg,
                filePath,
                parseData.icon
            );

            pkg.old_package = pkg.package;
            pkg.old_icon = pkg.icon;
            pkg.package = packageUrl;
            pkg.icon = iconUrl;

            await pkg.save();
        }
    }
}).then(() => {
    console.log('done');
    process.exit(0);
}).catch((err) => {
    console.log(err);
    process.exit(1);
});
