#!/usr/bin/env node

'use strict';

const db = require('../db');

function removeDuplicateRevisions(pkg) {
    let revisionMap = {};
    pkg.revisions.forEach((revision) => {
        if (revisionMap[revision.version]) {
            revision.downloads += revisionMap[revision.version].downloads
            revisionMap[revision.version] = revision;
        }
        else {
            revisionMap[revision.version] = revision;
        }
    });

    let revisions = [];
    for (var version in revisionMap) {
        revisions.push(revisionMap[version]);
    }

    revisions.sort((a, b) => {
        return a.revision > b.revision;
    });

    console.log(pkg.id);
    console.log('old', pkg.revisions);
    console.log('new', revisions);

    pkg.revisions = revisions;
    pkg.revision = revisions[revisions.length - 1].revision;
    return pkg.save();
}

db.Package.find({}).then((pkgs) => {
    return Promise.all(pkgs.map(removeDuplicateRevisions));
}).then(() => {
    console.log('done');
    process.exit(0);
}).catch((err) => {
    console.log(err);
    process.exit(1);
});
