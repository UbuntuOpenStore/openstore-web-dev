#!/bin/env node

'use strict';

const db = require('../db');

function backfillRevisions(pkg) {
    if (pkg.revisions.length == 0) {
        console.log(pkg.id);

        let versions = [];
        let revisions = [];
        let revision = 0;
        if (pkg.downloads) {
            for (let key in pkg.downloads) {
                revision++;

                let version = key.replace(/__/g, '.').substring(1); //Strip starting v that is prepended

                versions.push(version);
                revisions.push({
                    revision: revision,
                    version: version,
                    downloads: pkg.downloads[key],
                });

            }
        }

        if (versions.indexOf(pkg.version) == -1) {
            revisions.push({
                revision: 1,
                version: pkg.version,
                downloads: 0,
            });
        }

        console.log(revisions);

        pkg.revisions = revisions;
        pkg.revision = revision;
        return pkg.save();
    }
    else {
        return pkg;
    }
}

db.Package.find({}).then((pkgs) => {
    return Promise.all(pkgs.map(backfillRevisions));
}).then(() => {
    console.log('done');
    process.exit(0);
}).catch((err) => {
    console.log(err);
    process.exit(1);
});
